<?xml version="1.0" encoding="utf-8"?>
<!--
///////////////////////////////////////////////////////////////////////////
// Copyright (c) 2010-2011 Esri. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
///////////////////////////////////////////////////////////////////////////
-->
<viewer:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:viewer="com.esri.viewer.*">
    <fx:Script>
        <![CDATA[
			import com.esri.ags.events.MapMouseEvent;
			import com.esri.ags.geometry.MapPoint;
			
            //this function called when the widget's configuration is loaded
            private function init():void
            {
                if (configXML) // checking for valid content in the configuration file
                {
                    lbl.text = configXML.content || getDefaultString("helloContent");
                }
            }
			
			protected function helloWorld_openHandler(event:Event):void
			{
				map.addEventListener(MapMouseEvent.MAP_CLICK, mapClicked);
	/* 			map.addEventListener(MouseEvent.MOUSE_MOVE, map_mouseMovedHandler); */
			}
			
			private function map_mouseMovedHandler(event:MapMouseEvent):void
			{
				scalemove.text='Scale: 1:'+ event.map.scale.toFixed(0);
			}
				
			private function mapClicked(event:MapMouseEvent):void
			{
				
				lbl.text='X: '+ event.mapPoint.x + '\nY: ' + event.mapPoint.y;
				scale.text='Scale: 1:'+ event.map.scale.toFixed(0)+ event.map.level;
					
					/* <s:RichEditableText editable="false" text="1:{map.scale.toFixed(0)} (level {map.level})"/> */
			}
	
			protected function helloWorld_closedHandler(event:Event):void
			{
				map.removeEventListener(MapMouseEvent.MAP_CLICK, mapClicked);
			}
			
		]]>
    </fx:Script>
    <viewer:WidgetTemplate id="helloWorld" width="300" height="300"
						   open="helloWorld_openHandler(event)"
						   closed="helloWorld_closedHandler(event)"
						   >
        <viewer:layout>
            <s:VerticalLayout horizontalAlign="center" verticalAlign="middle"/>
        </viewer:layout>

        <s:Label id="lbl"
                 width="100%"
                 fontSize="18"
                 fontStyle="italic"
                 fontWeight="bold"/>
		<s:Label id="scale" text="Label"/>
		<s:Label id="scalemove" text="Label2"/>
    </viewer:WidgetTemplate>
</viewer:BaseWidget>
